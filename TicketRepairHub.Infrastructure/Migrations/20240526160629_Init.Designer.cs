// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketRepairHub.Infrastructure.Persistance;

#nullable disable

namespace TicketRepairHub.Infrastructure.Migrations
{
    [DbContext(typeof(RepairTicketDbContext))]
    [Migration("20240526160629_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FailureTreeTestId")
                        .HasColumnType("int");

                    b.Property<string>("Part")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FailureTreeTestId");

                    b.ToTable("FailureTreeParts");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreePartFailure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FailureTreePartId")
                        .HasColumnType("int");

                    b.Property<string>("PartFailureDecscription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FailureTreePartId");

                    b.ToTable("FailureTreePartFailures");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreeTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TestDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FailureTreeTests");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.TestLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("MaxTestResult1")
                        .HasColumnType("float");

                    b.Property<double>("MaxTestResult2")
                        .HasColumnType("float");

                    b.Property<double>("MaxTestResult3")
                        .HasColumnType("float");

                    b.Property<double>("MaxTestResult4")
                        .HasColumnType("float");

                    b.Property<double>("MaxTestResult5")
                        .HasColumnType("float");

                    b.Property<double>("MinTestResult1")
                        .HasColumnType("float");

                    b.Property<double>("MinTestResult2")
                        .HasColumnType("float");

                    b.Property<double>("MinTestResult3")
                        .HasColumnType("float");

                    b.Property<double>("MinTestResult4")
                        .HasColumnType("float");

                    b.Property<double>("MinTestResult5")
                        .HasColumnType("float");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestLimits");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsTestResult1OK")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestResult2OK")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestResult3OK")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestResult4OK")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestResult5OK")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTotalResultOK")
                        .HasColumnType("bit");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StopTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TestResult1")
                        .HasColumnType("float");

                    b.Property<double>("TestResult2")
                        .HasColumnType("float");

                    b.Property<double>("TestResult3")
                        .HasColumnType("float");

                    b.Property<double>("TestResult4")
                        .HasColumnType("float");

                    b.Property<double>("TestResult5")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ClosedAtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FailedOnPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailedOnPartDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailedOnTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTicketClosed")
                        .HasColumnType("bit");

                    b.Property<string>("OperatorComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreePart", b =>
                {
                    b.HasOne("TicketRepairHub.Domain.Models.FailureTreeTest", "Test")
                        .WithMany("Parts")
                        .HasForeignKey("FailureTreeTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreePartFailure", b =>
                {
                    b.HasOne("TicketRepairHub.Domain.Models.FailureTreePart", "Part")
                        .WithMany("PartFailure")
                        .HasForeignKey("FailureTreePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreePart", b =>
                {
                    b.Navigation("PartFailure");
                });

            modelBuilder.Entity("TicketRepairHub.Domain.Models.FailureTreeTest", b =>
                {
                    b.Navigation("Parts");
                });
#pragma warning restore 612, 618
        }
    }
}
